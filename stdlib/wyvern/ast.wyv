module ast

import java:wyvern.stdlib.support.AST.utils

type AST
	val ast:Unit

type Decl
	val decl:Unit

type Type
	val typ:Unit

def object(d:Decl):AST = new
	val ast:Unit = utils.oneDeclObject(d)

def twoDeclObject(d1:Decl, d2:Decl):AST = new
  val ast:Unit = utils.twoDeclObject(d1, d2)

def defn(name:String,resultType:Type,body:AST):Decl = new
	val decl:Unit = utils.OneArgDefn(name, resultType, body)

def int(i:Int):AST = new
	val ast:Unit = utils.intLiteral(i)

def string(s:String):AST = new
	val ast:Unit = utils.stringLiteral(s)

def variable(s:String):AST = new
	val ast:Unit = utils.variable(s)

def call(receiver:AST, methodName:String, argument:AST):AST = new
	val ast:Unit = utils.oneArgCall(receiver,methodName, argument)

def parseExpression(input : String) : AST = new
  val ast:Unit = utils.parseExpression(input)

val types = new
  def int():Type = new
    val typ:Unit = utils.intType()

  def dyn():Type = new
    val typ:Unit = utils.dynType()


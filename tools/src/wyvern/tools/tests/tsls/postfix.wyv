module postfix

import stdout	// TODO: should be "require" - but for metadata shouldn't exist :-)
import wyvern.ast
import wyvern.Int
import wyvern.option
import tsls.parser

type AST = ast.AST

type PostfixExpr
    def eval():Int
// TODO: get metadata to work in this situation as well!
//    type T = Int
//        val x:Int
//        metadata "hello"+7
//    metadata new //stdout.print("ran metadata!")
//        def eval():Int = 3
    metadata new
        def parseTSL(input:String):option.Option
            val parseResult = parser.parse(input)
            parseResult.map((r) =>
                ast.object(
                    ast.defn("eval",ast.types.int(),
				    	//ast.call(ast.variable("Int"), "from", ast.string(input)) 
                        //ast.int(Int.from(input))
                        r
				    )
                )
            )
